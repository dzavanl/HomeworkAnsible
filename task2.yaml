---
- name: Task2 - creating users
  hosts: all # specify servers
  become: yes # use sudo privileges
  tasks:
    - name: Reading from CSV file
      read_csv:
        path: /HomeworkAnsible/users.csv # Path to users.csv
      register: user_list
      delegate_to: localhost

    - name: Create user from CSV
      user:
        name: "{{ item.User }}"
        comment: "{{ item.Owner_Team }}{{ item.Comment }}"
        state: present
      loop: "{{ user_list.list }}"
      become: true

    - name: Generate SSH key for functional users #It is also possible to use generate_ssh_key in user module provided by ansible
      command: ssh-keygen -f "/home/{{ item.User }}/.ssh/id_rsa" -N ''
      args:
        creates: "/home/{{ item.User }}/.ssh/id_rsa"
      when: item.Functional == '1'
      loop: "{{ user_list.list }}"

    - name: Deploy public key if provided
      copy:
        content: "{{ item.Pub_key }}"
        dest: "/home/{{ item.User }}/.ssh/authorized_keys"
      when: item.Pub_key | length > 0
      loop: "{{ user_list.list }}"

    - name: Ensure generic admin user exists if not in CSV   
      user:
        name: admin
        password: M0nk3yJ0b$Ev3ryday | password_hash('sha512')
        group: sudo
        append: true
      when: admin not in user_list[0]

    - name: Lock accounts without RSA keys
      user: 
        name: "{{ item.User }}"
        state: "disable"
        when: item.Pub_key | length == 0
      loop: "{{ user_list.list }}" 

    - name: Disable password login for all users
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^PasswordAuthentication"
        line: "PasswordAuthentication no"
      notify: Restart SSH
    
    handlers:
    - name: Restart SSH
      service:
        name: sshd
        state: restarted
